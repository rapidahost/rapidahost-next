// /pages/api/logs.ts
import type { NextApiRequest, NextApiResponse } from 'next'
import { createClient } from '@supabase/supabase-js'

type Data =
  | { ok: true; items: any[]; total: number; page: number; limit: number }
  | { error: string }

const SUPABASE_URL = process.env.SUPABASE_URL!
const SUPABASE_SERVICE_ROLE_KEY = process.env.SUPABASE_SERVICE_ROLE_KEY!
const ADMIN_API_KEY = process.env.ADMIN_API_KEY!

// สร้าง admin client (ใช้ service role key เฉพาะฝั่ง server เท่านั้น)
const supabase = createClient(SUPABASE_URL, SUPABASE_SERVICE_ROLE_KEY, {
  auth: { persistSession: false },
})

export default async function handler(req: NextApiRequest, res: NextApiResponse<Data>) {
  // 1) ตรวจสอบ Admin API Key (Authorization: Bearer <ADMIN_API_KEY>)
  const authHeader = req.headers.authorization || ''
  const bearer = authHeader.startsWith('Bearer ') ? authHeader.slice(7) : ''
  if (!bearer || bearer !== ADMIN_API_KEY) {
    return res.status(401).json({ error: 'Unauthorized' })
  }

  // 2) รองรับเฉพาะ GET
  if (req.method !== 'GET') {
    res.setHeader('Allow', 'GET')
    return res.status(405).json({ error: 'Method Not Allowed' })
  }

  // 3) อ่าน query: ?page=1&limit=10&search=...
  const page = Math.max(1, parseInt(String(req.query.page ?? '1'), 10) || 1)
  const limit = Math.min(100, Math.max(1, parseInt(String(req.query.limit ?? '10'), 10) || 10))
  const search = String(req.query.search ?? '').trim()

  const from = (page - 1) * limit
  const to = from + limit - 1

  // 4) สร้าง query ไปยังตาราง logs
  //    (ปรับชื่อคอลัมน์ตาม schema ที่คุณใช้ เช่น message / event / status ฯลฯ)
  let query = supabase
    .from('logs')
    .select('*', { count: 'exact' })
    .order('created_at', { ascending: false })
    .range(from, to)

  if (search) {
    // ตัวอย่างค้นหาแบบ OR ด้วย ilike หลายคอลัมน์
    // ปรับชื่อคอลัมน์ให้ตรงจริง
    query = query.or(
      `message.ilike.%${search}%,event.ilike.%${search}%,status.ilike.%${search}%`
    )
  }

  const { data, count, error } = await query

  if (error) {
    // ส่งข้อความ error กลับไป (ช่วยดีบักตอน dev)
    return res.status(500).json({ error: error.message })
  }

  return res.status(200).json({
    ok: true,
    items: data ?? [],
    total: count ?? 0,
    page,
    limit,
  })
}
