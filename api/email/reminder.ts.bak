import type { NextApiRequest, NextApiResponse } from 'next';
import { sendEmailWithSendGrid } from '@/lib/sendgrid';
import { getInvoiceDetails, getClientDetails } from '@/lib/whmcs';

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method !== 'POST') return res.status(405).end();

  const { invoiceId } = req.body;
  if (!invoiceId) return res.status(400).json({ error: 'Missing invoiceId' });

  try {
    const invoice = await getInvoiceDetails(invoiceId);
    const client = await getClientDetails(invoice.clientid);

    if (!client?.email) throw new Error('Client email not found');

    await sendEmailWithSendGrid({
      to: client.email,
      dynamicTemplateData: {
        subject: `Reminder: Invoice #${invoice.id} is still unpaid`,
        client_name: `${client.firstname} ${client.lastname}`,
        invoice_id: invoice.id,
        amount: invoice.amount,
        status: invoice.status,
        due_date: invoice.duedate,
        invoice_url: `https://billing.rapidahost.com/viewinvoice.php?id=${invoice.id}`
      },
      templateId: 'd-70e6c90d73684487827f76846def9c91'
    });

    res.status(200).json({ success: true });
  } catch (err) {
    console.error('Reminder email failed', err);
    res.status(500).json({ error: 'Reminder email failed' });
  }
}
