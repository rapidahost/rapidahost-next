// pages/admin/email/[messageId].tsx

import { useRouter } from 'next/router';
import { useEffect, useState } from 'react';
import Head from 'next/head';

export default function EmailLogPage() {
  const router = useRouter();
  const { messageId } = router.query;

  const [emailData, setEmailData] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    if (!messageId) return;
    const fetchEmailData = async () => {
      try {
        const res = await fetch(`/api/email/${messageId}`);
        if (!res.ok) throw new Error('Failed to fetch');
        const data = await res.json();
        setEmailData(data);
      } catch (err) {
        setError(err.message);
      } finally {
        setLoading(false);
      }
    };
    fetchEmailData();
  }, [messageId]);

  return (
    <>
      <Head>
        <title>Email Log - {messageId}</title>
      </Head>
      <div className="p-6">
        <h1 className="text-2xl font-bold mb-4">Email Log - {messageId}</h1>
        {loading && <p>Loading...</p>}
        {error && <p className="text-red-500">{error}</p>}
        {emailData && (
          <div className="space-y-4">
            <div>
              <h2 className="text-xl font-semibold">ðŸ“¨ Email Info</h2>
              <p><strong>From:</strong> {emailData.from}</p>
              <p><strong>To:</strong> {emailData.to}</p>
              <p><strong>Subject:</strong> {emailData.subject}</p>
              <p><strong>Status:</strong> {emailData.status}</p>
            </div>

            <div>
              <h2 className="text-xl font-semibold">ðŸ“‹ Event Logs</h2>
              {emailData.events?.length ? (
                <ul className="list-disc pl-6">
                  {emailData.events.map((evt, i) => (
                    <li key={i}>{evt.event} - {evt.timestamp}</li>
                  ))}
                </ul>
              ) : <p>No events available.</p>}
            </div>

            <div>
              <h2 className="text-xl font-semibold">ðŸ§¾ Raw Headers</h2>
              <pre className="bg-gray-100 p-4 rounded text-sm overflow-auto">
                {emailData.rawHeaders || 'No headers available.'}
              </pre>
            </div>

            <div>
              <h2 className="text-xl font-semibold">ðŸ“Ž Raw Payload</h2>
              <pre className="bg-gray-100 p-4 rounded text-sm overflow-auto">
                {JSON.stringify(emailData.rawPayload, null, 2)}
              </pre>
            </div>
          </div>
        )}
      </div>
    </>
  );
} 
